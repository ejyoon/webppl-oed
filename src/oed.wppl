var make_list = function(length, value) {
    return repeat(length, function(){return value});
};

var normalize_list = function(list) {
    return map(function(x){return div(x, sum(list));}, list);
};

var pam = function(arr,f) {
    return map(f,arr)
};

var OED = function(params) {
    //to do: model input check
    var models = params.models;

    var priors = (params.models_prior == undefined)
        ? make_list(models.length, 1/models.length)
        : normalize_list(params.models_prior);

    var numParticipants = (params.num_participants == undefined)
        ? [1]
        : params.num_participants;

    var nparts_samples = (params.num_participants_samples == undefined) ? 2000:
        params.num_participants_samples;

    //to do: experiment input check
    var experiments = params.experiments;

    var temp_data = (numParticipants.length == 1)
        ? pam(
            experiments,
            function(expt){
                var modelPredictions = map(function(models){models(expt)},
                                           models);
                var args = {
                    experiment: expt,
                    expectedKL: webpplOed.get_expected_kl(modelPredictions, priors),
                    numParticipants: numParticipants[0],
                    modelPredictions: modelPredictions
                };

                return webpplOed.make_datum(args);
            })
        : mapReduce1(
            append,
            function(expt) {
                var modelPredictions = map(function(models){models(expt)},
                                           models);
                pam(numParticipants,
                    function(num){
                        var args = {
                            experiment: expt,
                            expectedKL: webpplOed.get_expected_kl_participants_sample(modelPredictions, priors, numParticipants, nparts_samples),
                            numParticipants: num,
                            modelPredictions: modelPredictions
                        };

                        return webpplOed.make_datum(args)
                    })
            },
            experiments);

    var data = webpplOed.make_data(temp_data);
    return data;
};
