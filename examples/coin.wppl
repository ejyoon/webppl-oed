// Model parameters and helper functions
var coinWeights = [0.01, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 0.99];

// Bias coin model
var biasCoin = function(sequence) {
  Enumerate(function(){
    var p = uniformDraw(coinWeights);
    var scr = binomialERP.score([p,sequence.length], sum(sequence))
    factor(scr)
    return flip(p)
  })
}

// Markov coin model
var markovCoin = function(sequence) {
    Enumerate(function(){
        var transitionProb = uniformDraw(coinWeights);
        var generateSequence = function(n, flipsSoFar) {
            if (flipsSoFar.length == n) {
                return flipsSoFar;
            } else {
                var lastFlip = last(flipsSoFar);
                return generateSequence(n,
                                        append(flipsSoFar,
                                               flip(transitionProb) ? !lastFlip : lastFlip))
            }
        }

        var firstCoin = flip();
        var sampled = generateSequence(sequence.length, [firstCoin]);
        condition(all(idF,
                      map2(function(x,y) { x == y }, sampled, sequence)))

        return flip(transitionProb) ? !last(sampled) : last(sampled);
    })
}


// Execute the models and compute the information gain




EIG({mSample: function() { uniformDraw([biasCoin, markovCoin]) },
     xSample: function() { repeat(4, flip) },
     ySample: function() { flip() }}
   )

// AIG(function() { uniformDraw([biasCoin, markovCoin] )},
//     [true,true,false,true],
//     repeat(10, function() { true }))
